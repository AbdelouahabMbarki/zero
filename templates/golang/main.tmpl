package main
import (
	"log"
	"net"

	healthpb "{{ .GitRepo }}/{{ .Name }}-idl/gen/go/health"
	{{- range .Services}}
	{{ .Name }}pb "{{ $.GitRepo }}/{{ $.Name }}-idl/gen/go/{{ .Name }}"
	{{- end}}
	
	health "{{ .GitRepo }}/{{ .Name }}/server/health"
	{{- range .Services}}
	{{ .Name }} "{{ $.GitRepo }}/{{ $.Name }}/server/{{ .Name }}"
	{{- end}}

	"google.golang.org/grpc"
)

func main() {
	grpcAddr := "{{ .Network.Grpc.Host }}:{{ .Network.Grpc.Port }}"
	lis, err := net.Listen("tcp", grpcAddr)
	if err != nil {
		log.Fatalf("failed to listen: %v", err)
	}

	s := grpc.NewServer()

	//Server initialization & registration
	healthServer := health.NewHealthServer()
	healthpb.RegisterHealthServer(s, healthServer)
	{{- range .Services}}
	{{ .Name }}Server := {{ .Name }}.New{{ .Name | Title}}Server()
	{{ .Name }}pb.Register{{ .Name | Title}}Server(s, {{ .Name }}Server)
	{{- end}}


	log.Printf("Starting grpc server on %v...", grpcAddr)
	
	if err := s.Serve(lis); err != nil {
		log.Fatalf("failed to serve: %v", err)
	}
}
